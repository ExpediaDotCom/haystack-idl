// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: span.proto

package com.expedia.open.tracing;

public interface ProcessOrBuilder extends
    // @@protoc_insertion_point(interface_extends:Process)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * process/service name
   * </pre>
   *
   * <code>string serviceName = 1;</code>
   */
  java.lang.String getServiceName();
  /**
   * <pre>
   * process/service name
   * </pre>
   *
   * <code>string serviceName = 1;</code>
   */
  com.google.protobuf.ByteString
      getServiceNameBytes();

  /**
   * <pre>
   * arbitrary set of key-value pairs associated with this process/service
   * </pre>
   *
   * <code>repeated .Tag tags = 2;</code>
   */
  java.util.List<com.expedia.open.tracing.Tag> 
      getTagsList();
  /**
   * <pre>
   * arbitrary set of key-value pairs associated with this process/service
   * </pre>
   *
   * <code>repeated .Tag tags = 2;</code>
   */
  com.expedia.open.tracing.Tag getTags(int index);
  /**
   * <pre>
   * arbitrary set of key-value pairs associated with this process/service
   * </pre>
   *
   * <code>repeated .Tag tags = 2;</code>
   */
  int getTagsCount();
  /**
   * <pre>
   * arbitrary set of key-value pairs associated with this process/service
   * </pre>
   *
   * <code>repeated .Tag tags = 2;</code>
   */
  java.util.List<? extends com.expedia.open.tracing.TagOrBuilder> 
      getTagsOrBuilderList();
  /**
   * <pre>
   * arbitrary set of key-value pairs associated with this process/service
   * </pre>
   *
   * <code>repeated .Tag tags = 2;</code>
   */
  com.expedia.open.tracing.TagOrBuilder getTagsOrBuilder(
      int index);
}
