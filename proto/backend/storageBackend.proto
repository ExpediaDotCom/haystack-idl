/*
 *
 *  Copyright 2018 Expedia, Group.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 */
syntax = "proto3";
import "spanBuffer.proto";

option java_package = "com.expedia.open.tracing.backend";
option java_multiple_files = true;
option go_package = "haystack";


message StichedSpan {
    string traceId = 1;
    repeated SpanBuffer spanBuffer = 2; // collection of span buffers belonging to a single Trace
}

// query for fetching values for given field
message WriteSpanRequest {
    repeated StichedSpan stitchedSpans = 1;
}

// query for fetching values for given field
message ReadSpanRequest {
    repeated string traceIds = 1; // trace id of the request
}

message ReadSpanResponse {
    repeated StichedSpan stichedSpans = 1; // collection of span buffers along with their trace id's
}

// An empty message type for rq/rs
message Empty {
}

// service interface to write and read traces
service StorageBackend {
    rpc writeSpans (WriteSpanRequest) returns (Empty); // write buffered spans to backend
    rpc readSpans (ReadSpanRequest) returns (ReadSpanResponse); // read buffered spans from backend
}
